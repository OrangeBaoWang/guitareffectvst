fM신스 만드는법: 2개의 오실리에이터를 이용하고 각각의 오실리에이터는 다른 주파수를 내며, 이걸 LFO로 각각의 주파수의 볼륨을 내렸다 올렸다 지그재그로 하면 된다. 3개 이상의 주파수도 가능.

핏치 디텍션과 핏치 쉬프트를 잘 이용하면 오토튠도되겠네...어렵겠지근데
----------------
OpenCL을 이용하지 말고 OpenGL을 이용해서 픽셀쉐이더를 이용해 계산하도록 한다.

------------------------------------------------------------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
컴파일 완료. 이제 Rakarrack 소스코드를 .h파일을 불러와서 클래스를 이용하기만 하면 테스트 시작
------------------------------------------------------------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
Hey guys,

After many hours, my understanding of MarkS comments & my approach the program is working properly. I don't think that this is the fastest approach but it is working.

Solution:

// main function

1) Initialization of first window:
1_a) CreateWindowEx...
1_b) Getting an OpenGL Device Context for the first window
1_c) Setting pixel format
1_d) Getting Rendering Context for the first window

2) Initialization of Second window:
2_a) CreateWindowEx...
2_b) Getting separate OpenGL Device Context for the second window
2_c) Setting pixel format
2_d) Getting separate Rendering Context for the second window

// main loop: 
{
// First I would like to draw something in the first window.
wglMakeCurrent(NULL,NULL);

// Activate First Window
wglMakeCurrent(FirstWindow_hDC,FirstWindow_hRC); 
ReSizeGLScene();

// ...ala Nehe: glShadeModel(); glClearColor;...

glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
glLoadIdentity();
// ################
// Now you can do the drawing in the first window.
// ################
SwapBuffers(FirstWindow_hDC);


// After that you can draw in the second window.
// Deactivate First Window
wglMakeCurrent(NULL,NULL); 
// Activate Second Window
wglMakeCurrent(SecondWindow_hDC,SecondWindow_hRC);
ReSizeGLScene();

// ...ala Nehe: glShadeModel(); glClearColor;...

glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
glLoadIdentity();
// #############
// Now you can do the drawing in the second window.
// #############
SwapBuffers(SecondWindow_hDC);
}


Fine.
Scalax


------------------------------------------------------------------------
------------------------------------------------------------------------
------------------------------------------------------------------------

Note for Zynewave Podium(and possibly other DAWs):

you need to put all the other dlls(libfftw3-3.dll, libfftw3f-3.dll, libfftw3l-3.dll, libsamplerate-0.dll, libsndfile-1.dll)
in where the Podium.exe(REAPER.exe, Cubase.exe, etc) is. System32 doesn't work.
---------
freq = 440 * 2^((n-100)/12) 이런 미디 컨버젼 공식을 이용해 필터의 주파수를 쓴다.
n은 0~168까지 쓸 수 있다.(1Hz~22000Hz)
-------------------
OpenGL은 Additive Synthesis에만 이용할 수 있을 것 같다. 가장 비싼 멀티 오실리에이터/합치기가 공짜니....
하지만 Convolotron같은 이전배열값을 이용하는 재귀적인 거에는 병렬처리가 통하질 않는다.
---------------
Convolotron같은 클래스 생성시에 DS값을 지정해줘야 하는 것은 VST의 GUI에서도 생성시에 DS값 즉 오버/다운샘플링값을 지정하도록 한다.
Convolotron사각형 패널을 추가하고 거기에 DS값을 지정하면 Convolotron클래스가 생성되고 ConvolotronGUI가 나오는 방식
Convolotron같은 외부 wav를 이용하는 건 기존에 지정된 data안에 있는거 말고도 따로 외부적으로 더 지정할 수도 있게 한다.
-------------
각 파라메터의 미니멈/맥시멈 값은 rakarrack.fl안에 있다.
--------------------

최적화 하려면 Convolotron과 Harmonizer 등의 malloc을 processReplacing밖으로 옮겨야함
--------------------


최대 10개의 이펙트를 스태킹할 수 있게 하고
각각의 이펙트는 16개의 파라메터를 가질 수 있게 하여
총 160개의 파라메터를 VST 파라메터로 제공한다.

맨 마지막 10개의 파라메터는 어떤 이펙트를 가졌나를 저장하게 하는 enum값으로 쓴다.
각각의 이펙트가 바뀌면 16개의 파라메터값 역시 알맞은 값으로 바뀌어야 한다.
--------------
libsndfile-1.dll같은걸 호스트의 디렉토리에 카피하고 싶지 않다면

또다른 VST dll을 만들어서 그  VST dll에서 SetCurrentDirectory()로 이펙트의 DLL이 있는 폴더로 지정한 후에 그 vst dll에서 이펙트dll을 로드하면 된다. 아예 인스톨러를 만들어서 그렇게 하면 사용자는 편할 듯.

---------
슬라이더의 세로길이는 13
버튼의 세로는 26
-----------
4개 해봤는데 패턴이 보인다. 일단 한 건 그냥 놔두고

대충 16개의 mVolume들과 16개의 슬라이더 4개의 온오프 4개의 프리셋이나 팝업버튼을 두고
프로그래머블 쉐이더처럼 한다. 즉 하나의 클래스를 만들어서 옵션만 넣어주고 다 한다.

파라메터는

Real
Print
PresetNumber(changepar나 CompressorChangeParam등에서 첫번째 파라메터로쓰이는것)
RealPrint idx(RealToPrint에서 첫번째 파라메터로 쓰이는것)
Type(Slider, OnOff, Popup), Popup의 경우 TypeStrs도 필요
PresetStrs
Name(DrawText)

여기서 const num_Presets가 정확해야 할 듯.

그냥 노가다로 해도 이정도 제네럴하게 만드는 힘이 들 듯?