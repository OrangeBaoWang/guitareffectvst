OpenCL을 이용하지 말고 OpenGL을 이용해서 픽셀쉐이더를 이용해 계산하도록 한다.

------------------------------------------------------------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
컴파일 완료. 이제 Rakarrack 소스코드를 .h파일을 불러와서 클래스를 이용하기만 하면 테스트 시작
------------------------------------------------------------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
Hey guys,

After many hours, my understanding of MarkS comments & my approach the program is working properly. I don't think that this is the fastest approach but it is working.

Solution:

// main function

1) Initialization of first window:
1_a) CreateWindowEx...
1_b) Getting an OpenGL Device Context for the first window
1_c) Setting pixel format
1_d) Getting Rendering Context for the first window

2) Initialization of Second window:
2_a) CreateWindowEx...
2_b) Getting separate OpenGL Device Context for the second window
2_c) Setting pixel format
2_d) Getting separate Rendering Context for the second window

// main loop: 
{
// First I would like to draw something in the first window.
wglMakeCurrent(NULL,NULL);

// Activate First Window
wglMakeCurrent(FirstWindow_hDC,FirstWindow_hRC); 
ReSizeGLScene();

// ...ala Nehe: glShadeModel(); glClearColor;...

glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
glLoadIdentity();
// ################
// Now you can do the drawing in the first window.
// ################
SwapBuffers(FirstWindow_hDC);


// After that you can draw in the second window.
// Deactivate First Window
wglMakeCurrent(NULL,NULL); 
// Activate Second Window
wglMakeCurrent(SecondWindow_hDC,SecondWindow_hRC);
ReSizeGLScene();

// ...ala Nehe: glShadeModel(); glClearColor;...

glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
glLoadIdentity();
// #############
// Now you can do the drawing in the second window.
// #############
SwapBuffers(SecondWindow_hDC);
}


Fine.
Scalax


------------------------------------------------------------------------
------------------------------------------------------------------------
------------------------------------------------------------------------

Note for Zynewave Podium(and possibly other DAWs):

you need to put all the other dlls(libfftw3-3.dll, libfftw3f-3.dll, libfftw3l-3.dll, libsamplerate-0.dll, libsndfile-1.dll)
in where the Podium.exe(REAPER.exe, Cubase.exe, etc) is. System32 doesn't work.